apiVersion: apps/v1
kind: Deployment
metadata:
  name: rental-frontend
  namespace: rental
spec:
  replicas: 1
  selector:
    matchLabels: { app: rental-frontend }
  template:
    metadata:
      labels: { app: rental-frontend }
    spec:
      containers:
        - name: rental-frontend
          # image is set by the workflow (kubectl set image)
          image: docker.io/your-user/rental-frontend:latest
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet: { path: /, port: 80 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /, port: 80 }
            initialDelaySeconds: 10
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: rental-frontend
  namespace: rental
spec:
  selector: { app: rental-frontend }
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
